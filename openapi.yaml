openapi: 3.0.0
servers:
  - url: /v1
info:
  version: 0.1.0
  title: Infra API
  description: Infra REST API
tags:
  - name: users
    description: Manage users
  - name: groups
    description: Manage groups
  - name: sources
    description: Manage identity sources
  - name: destinations
    description: Manage infrastructure destinations
  - name: creds
    description: Create credentials to access a destination
  - name: roles
    description: Manage roles
  - name: auth
    description: Authentication
  - name: version
    description: Version
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      required:
        - id  
        - email
        - created
        - updated
      properties:
        id:
          type: string
        email:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
    Group:
      type: object
      required:
        - id
        - name
        - created
        - updated
        - source
      properties:
        id:
          type: string
        name:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        source:
          type: string
    Source:
      type: object
      required:
        - id
        - created
        - updated
      properties:
        id:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        okta:
          $ref: '#/components/schemas/SourceOkta'
    SourceOkta:
      type: object
      required:
        - domain
        - clientId
      properties:
        domain:
          type: string
        clientId:
          type: string
    Destination:
      type: object
      required:
        - id
        - name
        - created
        - updated
      properties:
        id:
          type: string
        name:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        kubernetes:
          $ref: '#/components/schemas/DestinationKubernetes'
    DestinationCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        kubernetes:
          $ref: '#/components/schemas/DestinationKubernetes'
    DestinationKubernetes:
      type: object
      required:
        - ca
        - endpoint
        - namespace
        - saToken
      properties:
        ca:
          type: string
          x-go-custom-tag: validate:"required"
        endpoint:
          type: string
          x-go-custom-tag: validate:"required"
        namespace:
          type: string
          x-go-custom-tag: validate:"required"
        saToken:
          type: string
          x-go-custom-tag: validate:"required"
    Cred:
      type: object
      required:
        - token
        - expires
      properties:
        token:
          type: string
        expires:
          type: integer
          format: int64
    LoginRequest:
      type: object
      properties:
        okta:
          $ref: '#/components/schemas/LoginRequestOkta'
    Role:
      type: object
      required:
        - id
        - name
        - created
        - updated
        - kind
        - namespace 
        - users
        - destination
      properties:
        id:
          type: string
        name:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        kind:
          $ref: "#/components/schemas/RoleKind"
        namespace:
          type: string
          enum: [role, cluster-role]
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        destination:
          $ref: '#/components/schemas/Destination'
    RoleKind:
      type: string
      enum:
        - role
        - cluster-role
    LoginRequestOkta:
      type: object
      required:
        - domain
        - code
      properties:
        domain:
          type: string
          x-go-custom-tag: validate:"required"
        code:
          type: string
          x-go-custom-tag: validate:"required"
    LoginResponse:
      type: object
      required:
        - token
        - name
      properties:
        token:
          type: string
        name:
          type: string
    Version:
      type: object
      required:
        - version
      properties:
        version:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
paths:
  /users:
    get:
      summary: List users
      tags:
        - users
      security:
        - bearerAuth: []
      operationId: listUsers
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups:
    get:
      summary: List groups
      tags:
        - groups
      security:
        - bearerAuth: []
      operationId: listGroups
      responses:
        '200':
          description: groups response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sources:
    get:
      summary: List sources
      tags:
        - sources
      operationId: listSources
      responses:
        '200':
          description: sources response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /destinations:
    get:
      tags:
        - destinations
      security:
        - bearerAuth: []
      summary: List destinations
      operationId: listDestinations
      responses:
        '200':
          description: destinations response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Destination'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - destinations
      security:
        - bearerAuth: []
      summary: Register a destination
      operationId: createDestination
      x-codegen-request-body-name: body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCreateRequest'
      responses:
        '200':
          description: create destination response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /creds:
    post:
      tags:
        - creds
      security:
        - bearerAuth: []
      summary: Create credentials to access a destination
      operationId: createCred
      responses:
        '200':
          description: create cred response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cred'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /roles:
    get:
      summary: List roles
      tags:
        - roles
      security:
        - bearerAuth: []
      operationId: listRoles
      parameters:
        - in: query
          name: destinationId
          schema:
            type: string
          required: true
          description: ID of the destination for which to list roles
      responses:
        '200':
          description: roles response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      summary: Login to Infra and get an API token for a user
      tags:
        - auth
      operationId: login
      x-codegen-request-body-name: body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logout:
    post:
      summary: Log out of Infra
      tags:
        - auth
      security:
        - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: logout response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /version:
    get:
      summary: Get version information
      tags:
        - version
      operationId: version
      responses:
        '200':
          description: version response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'