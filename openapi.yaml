openapi: 3.0.0
servers:
  - url: /v1
info:
  version: 0.1.0
  title: Infra API
  description: Infra REST API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: users
    description: Manage users
  - name: groups
    description: Manage groups
  - name: roles
    description: Manage roles
  - name: providers
    description: Manage identity providers
  - name: destinations
    description: Manage infrastructure destinations
  - name: tokens
    description: Manage infrastructure destination tokens
  - name: api-keys
    description: Manage administrator API keys
  - name: auth
    description: Manage user authentication
  - name: version
    description: Version
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /users:
    get:
      summary: List users
      tags:
        - users
      security:
        - bearerAuth: []
      operationId: listUsers
      parameters:
        - in: query
          name: email
          schema:
            type: string
            format: email
          description: Filter results by user email
      responses:
        '200':
          description: List users response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi/user.yaml#/User'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /users/{id}:
    get:
      summary: Get user by ID
      tags:
        - users
      security:
        - bearerAuth: []
      operationId: getUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: Get user response
          content:
            application/json:
              schema:
                $ref: 'openapi/user.yaml#/User'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /groups:
    get:
      summary: List groups
      tags:
        - groups
      security:
        - bearerAuth: []
      operationId: listGroups
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter groups by name
        - in: query
          name: active
          schema:
            type: boolean
          description: Filter groups by active state
      responses:
        '200':
          description: List groups response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi/group.yaml#/Group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /groups/{id}:
    get:
      summary: Get group by ID
      tags:
        - groups
      security:
        - bearerAuth: []
      operationId: getGroup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Group ID
      responses:
        '200':
          description: Get group response
          content:
            application/json:
              schema:
                $ref: 'openapi/group.yaml#/Group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /providers:
    get:
      summary: List providers
      tags:
        - providers
      operationId: listProviders
      parameters:
        - in: query
          name: kind
          schema:
            $ref: 'openapi/provider.yaml#/ProviderKind'
          description: Filter providers by kind
      responses:
        '200':
          description: List providers response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi/provider.yaml#/Provider'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /providers/{id}:
    get:
      summary: Get provider by ID
      tags:
        - providers
      operationId: getProvider
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Provider ID
      responses:
        '200':
          description: Get provider response 
          content:
            application/json:
              schema:
                $ref: 'openapi/provider.yaml#/Provider'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /destinations:
    get:
      tags:
        - destinations
      security:
        - bearerAuth: []
      summary: List destinations
      operationId: listDestinations
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter destinations by name
        - in: query
          name: kind
          schema:
            $ref: 'openapi/destination.yaml#/DestinationKind'
          description: Filter destinations by kind
      responses:
        '200':
          description: List destinations response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi/destination.yaml#/Destination'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
    post:
      tags:
        - destinations
      security:
        - bearerAuth: []
      summary: Create a destination
      operationId: createDestination
      x-codegen-request-body-name: body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi/destination.yaml#/DestinationCreateRequest'
      responses:
        '200':
          description: Create destination response
          content:
            application/json:
              schema:
                $ref: 'openapi/destination.yaml#/Destination'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /destinations/{id}:
    get:
      tags:
        - destinations
      security:
        - bearerAuth: []
      summary: Get destination by ID
      operationId: getDestination
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Destination ID
      responses:
        '200':
          description: Get destinations response
          content:
            application/json:
              schema:
                $ref: 'openapi/destination.yaml#/Destination'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /api-keys:
    get:
      tags:
        - api-keys
      security:
        - bearerAuth: []
      summary: List API keys
      operationId: listAPIKeys
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter results by the API key name
      responses:
        '200':
          description: List API keys response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi/api-key.yaml#/InfraAPIKey'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
    post:
      tags:
        - api-keys
      security:
        - bearerAuth: []
      summary: Create an API key
      operationId: createAPIKey
      x-codegen-request-body-name: body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi/api-key.yaml#/InfraAPIKeyCreateRequest'
      responses:
        '200':
          description: Create API key response
          content:
            application/json:
              schema:
                $ref: 'openapi/api-key.yaml#/InfraAPIKeyCreateResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /api-keys/{id}:
    delete:
      tags:
        - api-keys
      security:
        - bearerAuth: []
      summary: Delete an API key
      operationId: deleteAPIKey
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: API key ID
      responses:
        '204':
          description: Empty response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /tokens:
    post:
      tags:
        - tokens
      security:
        - bearerAuth: []
      summary: Create an infrastructure destination token
      operationId: createToken
      x-codegen-request-body-name: body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi/token.yaml#/TokenRequest'
      responses:
        '200':
          description: Create token response
          content:
            application/json:
              schema:
                $ref: 'openapi/token.yaml#/Token'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /roles:
    get:
      summary: List roles
      tags:
        - roles
      security:
        - bearerAuth: []
      operationId: listRoles
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter results by name
        - in: query
          name: kind
          schema:
            $ref: 'openapi/role.yaml#/RoleKind'
          description: Filter results by kind
        - in: query
          name: destination
          schema:
            type: string
          description: Filter results by destination
      responses:
        '200':
          description: List roles response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi/role.yaml#/Role'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /roles/{id}:
    get:
      summary: Get role
      tags:
        - roles
      security:
        - bearerAuth: []
      operationId: getRole
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Role ID
      responses:
        '200':
          description: Role response
          content:
            application/json:
              schema:
                $ref: 'openapi/role.yaml#/Role'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /login:
    post:
      summary: Login to Infra
      tags:
        - auth
      operationId: login
      x-codegen-request-body-name: body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi/auth.yaml#/LoginRequest'
      responses:
        '200':
          description: Login response
          content:
            application/json:
              schema:
                $ref: 'openapi/auth.yaml#/LoginResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /logout:
    post:
      summary: Logout of Infra
      tags:
        - auth
      security:
        - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Logout response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
  /version:
    get:
      summary: Get version information
      tags:
        - version
      operationId: version
      responses:
        '200':
          description: Version response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Version'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: 'openapi/utils.yaml#/Error'
