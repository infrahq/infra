apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "registry.fullname" . }}
  labels:
{{- include "registry.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
{{- include "registry.selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
{{- include "registry.selectorLabels" . | nindent 8 }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
{{- with .Values.pod.annotations }}
  {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
      automountServiceAccountToken: true
      serviceAccountName: {{ include "registry.serviceAccountName" . }}
      dnsPolicy: ClusterFirst
{{- with .Values.image.pullSecrets }}
      imagePullSecrets:
  {{- range . }}
        - name: {{ . }}
  {{- end }}
{{- end }}
      containers:
        - name: registry
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["registry", "-c", "/var/run/infra/config/infra.yaml", "--db", "/var/run/infra/data/infra.db", "--tls-cache", "/var/run/infra/data/cache"]
          env:
            - name: INFRA_REGISTRY_ROOT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: infra-registry
                  key: rootApiKey
                  optional: true
            - name: ENGINE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: infra-registry
                  key: engineApiKey
                  optional: true
            - name: INFRA_LOG_LEVEL
              value: {{ .Values.logLevel | default "info" }}
            - name: INFRA_SYNC_INTERVAL_SECONDS
              value: "30"
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: data
              mountPath: /var/run/infra/data
            - name: config
              mountPath: /var/run/infra/config
          readinessProbe:
            httpGet:
              {{- with first .Values.service.ports }}
              scheme: {{ .name | upper }}
              path: /healthz
              port: {{ .targetPort }}
              {{- end }}
          livenessProbe:
            httpGet:
              {{- with first .Values.service.ports }}
              scheme: {{ .name | upper }}
              path: /healthz
              port: {{ .targetPort }}
              {{- end }}
            periodSeconds: 3
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - infra-registry
            topologyKey: kubernetes.io/hostname
      volumes:
        - name: config
          configMap:
            name: infra-registry
            optional: true
        - name: data
          persistentVolumeClaim:
            claimName: infra-registry
