# Default configurations
# Ref: https://github.com/infrahq/infra

nameOverride: ""
fullnameOverride: ""

global:

  image:
    ## The image repository to use for all deployments
    repository: infrahq/infra

    ## The image tag to use instead of the default {{ .Chart.AppVersion }}
    tag: ""

    ## The pull policy to use when pulling (downloading) the image
    ## Ref: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    pullPolicy: IfNotPresent

  ## One or more Secret to use when pulling images
  ## Global values will be merged into local values
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # - name: "image-pull-secret"

  ## Additional labels to apply to all resources
  ## Global values will be merged into local values
  labels: {}

  ## Labels to apply for all deployed pods
  ## Global values will be merged into local values
  podLabels: {}

  ## Annotations to apply for all deployed pods
  ## Global values will be merged into local values
  podAnnotations: {}

# Default server configurations
# Ref: https://github.com/infrahq/infra/blob/main/helm/charts/infra/charts/server/README.md

server:

  ## Deploy the server
  enabled: true
  componentName: server

  ## Number of server pods to run
  ## No effect unless `autoscaling.enabled` is `false`
  replicas: 1

  ## Infra server image configurations
  image:
    ## The image repository to use for the server deployment
    repository: infrahq/infra

    ## The image tag to use instead of the default {{ .Chart.AppVersion }}
    tag: ""

    ## The pull policy to use when pulling (downloading) the server image
    ## Ref: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    pullPolicy: IfNotPresent

  ## One or more Secret to use when pulling the server image
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # - name: "image-pull-secret"

  ## Additional labels to apply to all resources
  ## Global values will be merged into local values
  labels: {}

  ## Environment variables to pass to the server container
  env: []
  # - name: "INFRA_LOG_LEVEL"
  #   value: "info"

  ## ConfigMap or Secret references containing environment variables to pass to the server container
  ## Ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  envFrom: []
  # - configMapRef:
  #     name: configmap-name
  # - secretRef:
  #     name: secret-name

  ## Infra server service account configurations
  serviceAccount:

    ## Create the service account
    create: true

    ## Name of the service account to use instead of the default templated fullname
    name: ""

    ## Annotations to apply to the service account
    annotations: {}

    ## Automount service account API credentials
    automountServiceAccountToken: true

  ## Labels to apply to the server pod
  podLabels: {}

  ## Annotations to apply to the server pod
  podAnnotations: {}

  ## Security context for the server pod
  podSecurityContext: {}
  #   fsGroup: 2000

  ## Security context for the server container
  securityContext: {}
  #   runAsUser: 999
  #   runAsGroup: 999
  #   readOnlyRootFilesystem: true

  ## Liveness probe for the default backend
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:

    ## Minimum number of consecutive successes before the probe is considered successful
    successThreshold: 1

    ## Minimum number of consecutive failures before the probe is considered failed
    failureThreshold: 3

    ## Seconds after container starts before the probe is initialized
    initialDelaySeconds: 10

    ## Seconds between consecutive probes
    periodSeconds: 10

    ## Seconds before the probe times out
    timeoutSeconds: 1

  ## Readiness probe for the default backend
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:

    ## Minimum number of consecutive successes before the probe is considered successful
    successThreshold: 1

    ## Minimum number of consecutive failures before the probe is considered failed
    failureThreshold: 3

    ## Seconds after container starts before the probe is initialized
    initialDelaySeconds: 10

    ## Seconds between consecutive probes
    periodSeconds: 10

    ## Seconds before the probe times out
    timeoutSeconds: 1

  ## Additional volumes to attach to the server pod
  volumes: []
  # - name: configmap-volume
  #   configMap:
  #     name: configmap-name
  # - name: secret-volume
  #   secret:
  #     secretName: secret-name

  ## Additioanl volume mounts to attach to the server container
  volumeMounts: []
  # - name: configmap-volume
  #   mountPath: /mnt/configmap
  # - name: secret-volume
  #   mountPath: /mnt/secret
  #   readOnly: true

  ## Infra server service configurations
  service:

    ## Service type
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: LoadBalancer

    ## Service labels
    labels: {}

    ## Service annotations
    annotations: {}

    ## HTTP service port
    port: 80

    ## HTTP service port name
    portName: http

    ## HTTP service node port
    ## No effect unless `server.service.type` is `NodePort`
    nodePort: 30080

    ## HTTPS service port
    securePort: 443

    ## HTTPS service port name
    securePortName: https

    ## HTTPS service node port
    ## No effect unless `server.service.type` is `NodePort`
    secureNodePort: 30443

    ## IP of the load balancer to create
    ## No effect unless `server.service.type` is `LoadBalancer`
    loadBalancerIP: ""

    ## Source IP ranges that can access the service
    loadBalancerSourceRanges: []

    ## External IPs that can be used to access the service
    externalIPs: []

    ## Control how traffic from external sources are routed
    ## Supports `Cluster` or `Local`
    externalTrafficPolicy: ""

    ## Control session-based routing of client connections
    ## Supports `ClientIP` or `None`
    sessionAffinity: ""

  ## Metrics configurations
  metrics:

    ## Enable server metrics
    enabled: false

    ## Metrics service configurations
    service:

      ## Metrics service labels
      labels: {}

      ## Metrics service annotations
      annotations: {}

      ## Metrics service port
      port: 9090

      ## Metrics service port name
      portName: metrics

    ## Service monitor configurations
    serviceMonitor:

      ## Enable service monitor
      enabled: false

      ## Service monitor labels
      labels: {}

      ## Service monitor annotations
      annotations: {}

      ## Service monitor scrape interval
      interval: 30s

      ## Prometheus relabel configs to apply to samples before scraping
      relabelings: []

      ## Prometheus metric relabel configs to apply to samples before ingesting
      metricRelabelings: []

  ## Infra server ingress configurations
  ingress:

    ## Enable server ingress resource
    enabled: false

    ## Ingress labels
    labels: {}

    ## Ingress annotations
    annotations: {}

    ## Name of the ingress controller that will implement this resource
    className: ""

    ## Hostnames to apply this ingress to
    ## Must not be empty if `ingress.enabled` is `true`
    hosts: []
    # - infra.example.com

    ## Paths to apply this ingress to
    paths:
      - /

    ## Type of path
    ## One of `Exact`, `Prefix`, or `ImplementationSpecific`
    pathType: Prefix

    ## Additional paths to attach to the ingress
    additionalPaths: []
    # Kubernetes <1.19, using `networking.k8s.io/v1beta1`
    # - path: /*
    #   backend:
    #     serviceName: ssl-redirect
    #     servicePort: use-annotation
    # Kubernetes >=1.19, using `networking.k8s.io/v1`
    # - path: /*
    #   pathType: Prefix
    #   backend:
    #     service:
    #       name: ssl-redirect
    #       port:
    #         name: use-annotation

    ## Ingress TLS configurations
    tls: []
    # - secretName: infra-tls-certificate
    #   hosts:
    #     - infra.example.com

  ## Infra server persistence configurations
  persistence:

    ## Enable server persistence
    enabled: true

    ## persistence labels
    labels: {}

    ## persistence annotations
    annotations: {}

    ## Name of the storage controller that will implement this resource
    className: ""

    ## Resource requests and limits for the persistence
    resources:
      requests:
        storage: 2Gi
    #   limits:
    #     storage: 4Gi

  ## Resource requests and limits for the server pod
  resources: {}
  #   requests:
  #     cpu: 250m
  #     memory: 256Mi
  #   limits:
  #     cpu: 500m
  #     memory: 512Mi

  ## Infra server autoscaling configurations
  autoscaling:

    ## Enable server autoscaling
    enabled: false

    ## Minimum number of server pods to run
    minReplicas: 1

    ## Maximum number of server pods to run
    maxReplicas: 3

    ## Target average CPU utilization percentage
    targetCPUUtilizationPercentage: 50

    ## Target average memory utilization percentage
    targetMemoryUtilizationPercentage: 50

  ## Infra server node selector configurations
  nodeSelector: {}

  ## Infra server tolerations configurations
  tolerations: []

  ## Infra server affinity configurations
  affinity: {}

  ## Primary server configuration
  ## Ref: https://github.com/infrahq/infra/blob/main/docs/cli.md#infra-server
  config: {}

  ## Infra server admin access key
  #   adminAccessKey: ""

  ## Database name
  #   dbName: ""

  ## Database host
  #   dbHost: ""

  ## Database port
  #   dbPort: 0

  ## Database username
  #   dbUsername: ""

  ## Database password. Use `file:` or `env:` to reference a file or environment variable
  ## Ref: https://github.com/infrahq/infra/blob/main/docs/secrets.md
  #   dbPassword: ""

  ## Extra database parameters
  ## For PostgresQL: see https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
  #   dbParameters: ""

  ## Path on the filesystem to store the database encryption key
  #   dbEncryptionKey: ""

  ## Enable service telemetry
  #   enableTelemetry: true

  ## Enable service crash reporting
  #   enableCrashReporting: true

  ## Enable server UI
  #   enableUI: false

  ## Infra server UI proxy URL
  #   uiProxyURL: ""

  ## Duration of a user session
  #   sessionDuration: 12h0m0s

  ## Additional secret providers to configure
  additionalSecrets: []
  # - kind: ""  # required, kind of secret provider. one of ['plaintext', 'env', 'file', 'kubernetes', 'vault', 'awssecretmanager', 'awsssm']
  #   name: ""  # optional, to be referenced when accessing secrets. defaults to 'kind'
  #   ...:      # additional configuration options are available and may be required for certain secret providers, e.g. 'vault'. see below.

  ## Example
  # Configure Kubernetes as a secret provider
  # - name: kubernetes                      # optional, used when referencing secrets, e.g. kubernetes:infra/secret, where 'infra' is the name of the secret in Kubernetes and `secret` is the field in that secret
  #   kind: kubernetes                      # required
  #   namespace: ""                         # required if secret exists in a namespace separate from the one infra is deployed to

  # Configure Vault as a secret provider
  # - name: vault                           # optional, used when referencing secrets, e.g. vault:infra-secret, where 'infra-secret' is the name of the secret in Vault
  #   kind: vault                           # required
  #   address: https://vault.example.com    # required
  #   token: env:VAULT_TOKEN                # required
  #   namespace: ""                         # optional
  #   transitMount: ""                      # optional, default '/transit'
  #   secretMount: ""                       # optional, default '/secret'

  # Configure AWS Secret Manager as a secret provider
  # - name: awssm                                               # optional, used when referencing secrets, e.g. awssm:infra-secret, where 'infra-secret' is the name of the secret in AWS Secret Manager
  #   kind: awssecretmanager                                    # required
  #   endpoint: https://secretsmanager.us-east-2.amazonaws.com  # required
  #   region: us-east-2                                         # required
  #   accessKeyID: env:AWS_ACCESS_KEY_ID                        # required
  #   secretAccessKey: env:AWS_SECRET_ACCESS_KEY                # required

  # Configure AWS Systems Manager Parameter Store as a secret provider
  # - name: awsssm                                  # optional, used when referencing secrets, e.g. awsssm:infra-secret, where 'infra-secret' is the name of the secret in AWS SSM
  #   kind: awsssm                                  # required
  #   endpoint: https://ssm.us-east-2.amazonaws.com # required
  #   region: us-east-2                             # required
  #   accessKeyID: env:AWS_ACCESS_KEY_ID            # required
  #   secretAccessKey: env:AWS_SECRET_ACCESS_KEY    # required
  #   keyID: ""                                     # optional, if set, this key will be used for decryption

  # Configure base64-encoded environment variable as a secret provider
  # - name: based64env  # required to differentiate betweent built-in plaintext 'env' secret provider
  #   kind: env         # required
  #   base64: true      # required

  ## Additional identity providers to configure
  additionalProviders: []
  # - name: ""          # required, to be referenced when creating grants
  #   url: ""           # required
  #   clientID: ""      # required
  #   clientSecret: ""  # required

  ## Example
  # Configure Okta as an identity provider
  # - name: Okta
  #   url: example.okta.com
  #   clientID: myoktaclientid
  #   clientSecret: env:OKTA_CLIENT_SECRET

  ## Additional grants to configure
  additionalGrants: []
  # - user: ""      # one of ['user', 'group', 'machine'] is required
  #   group: ""     # one of ['user', 'group', 'machine'] is required
  #   machine: ""   # one of ['user', 'group', 'machine'] is required
  #   resource: ""  # required, resource being granted access
  #   provider: ""  # required, references the name given to the provider
  #   role: ""      # optional, if omitted, Infra will only grant authentication to the resource

  ## Example
  # Grant user 'admin@example.com' Infra admin
  # - user: admin@example.com
  #   role: admin
  #   resource: infra

  # Grant user 'admin@example.com' edit to Kubernetes cluster 'docker-desktop'
  # - user: admin@example.com
  #   role: edit
  #   resource: kubernetes.docker-desktop

  # Grant group 'Everyone' view to Kubernetes cluster 'docker-desktop', namespace 'default'
  # - group: Everyone
  #   role: view
  #   resource: kubernetes.docker-desktop.default

## Default connector configurations
## Ref: https://github.com/infrahq/infra/blob/main/helm/charts/infra/charts/connector/README.md

connector:

  ## Deploy the connector
  enabled: false
  componentName: connector

  ## Number of connector pods to run
  ## No effect unless `autoscaling.enabled` is `false`
  replicas: 1

  ## Infra connector image configurations
  image:
    ## The image repository to use for the connector deployment
    repository: infrahq/infra

    ## The image tag to use instead of the default {{ .Chart.AppVersion }}
    tag: ""

    ## The pull policy to use when pulling (downloading) the connector image
    ## Ref: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    pullPolicy: IfNotPresent

  ## One or more Secret to use when pulling the connector image
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # - name: "image-pull-secret"

  ## Additional labels to apply to all resources
  ## Global values will be merged into local values
  labels: {}

  ## Environment variables to pass to the connector container
  env: []
  # - name: "INFRA_LOG_LEVEL"
  #   value: "info"

  ## ConfigMap or Secret references containing environment variables to pass to the connector container
  ## Ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  envFrom: []
  # - configMapRef:
  #     name: configmap-name
  # - secretRef:
  #     name: secret-name

  ## Infra connector service account configurations
  serviceAccount:

    ## Create the service account
    create: true

    ## Name of the service account to use instead of the default templated fullname
    name: ""

    ## Annotations to apply to the service account
    annotations: {}

    ## Automount service account API credentials
    automountServiceAccountToken: true

  ## Labels to apply to the connector pod
  podLabels: {}

  ## Annotations to apply to the connector pod
  podAnnotations: {}

  ## Security context for the connector pod
  podSecurityContext: {}
  #   fsGroup: 2000

  ## Security context for the connector container
  securityContext: {}
  #   runAsUser: 999
  #   runAsGroup: 999
  #   readOnlyRootFilesystem: true


  ## Liveness probe for the default backend
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:

    ## Minimum number of consecutive successes before the probe is considered successful
    successThreshold: 1

    ## Minimum number of consecutive failures before the probe is considered failed
    failureThreshold: 3

    ## Seconds after container starts before the probe is initialized
    initialDelaySeconds: 10

    ## Seconds between consecutive probes
    periodSeconds: 10

    ## Seconds before the probe times out
    timeoutSeconds: 1

  ## Readiness probe for the default backend
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:

    ## Minimum number of consecutive successes before the probe is considered successful
    successThreshold: 1

    ## Minimum number of consecutive failures before the probe is considered failed
    failureThreshold: 3

    ## Seconds after container starts before the probe is initialized
    initialDelaySeconds: 10

    ## Seconds between consecutive probes
    periodSeconds: 10

    ## Seconds before the probe times out
    timeoutSeconds: 1

  ## Additional volumes to attach to the server pod
  volumes: []
  # - name: configmap-volume
  #   configMap:
  #     name: configmap-name
  # - name: secret-volume
  #   secret:
  #     secretName: secret-name

  ## Additioanl volume mounts to attach to the server container
  volumeMounts: []
  # - name: configmap-volume
  #   mountPath: /mnt/configmap
  # - name: secret-volume
  #   mountPath: /mnt/secret
  #   readOnly: true

  ## Infra connector service configurations
  service:

    ## Service type
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: LoadBalancer

    ## Service labels
    labels: {}

    ## Service annotations
    annotations: {}

    ## HTTP service port
    port: 80

    ## HTTP service port name
    portName: http

    ## HTTP service node port
    ## No effect unless `connector.service.type` is `NodePort`
    nodePort: 30080

    ## HTTPS service port
    securePort: 8443

    ## HTTPS service port name
    securePortName: https

    ## HTTPS service node port
    ## No effect unless `connector.service.type` is `NodePort`
    secureNodePort: 30443

    ## IP of the load balancer to create
    ## No effect unless `connector.service.type` is `LoadBalancer`
    loadBalancerIP: ""

    ## Source IP ranges that can access the service
    loadBalancerSourceRanges: []

    ## External IPs that can be used to access the service
    externalIPs: []

    ## Control how traffic from external sources are routed
    ## Supports `Cluster` or `Local`
    externalTrafficPolicy: ""

    ## Control session-based routing of client connections
    ## Supports `ClientIP` or `None`
    sessionAffinity: ""

  ## Metrics configurations
  metrics:

    ## Enable connector metrics
    enabled: false

    ## Metrics service configurations
    service:

      ## Metrics service labels
      labels: {}

      ## Metrics service annotations
      annotations: {}

      ## Metrics service port
      port: 9090

      ## Metrics service port name
      portName: metrics

    ## Service monitor configurations
    serviceMonitor:

      ## Enable service monitor
      enabled: false

      ## Service monitor labels
      labels: {}

      ## Service monitor annotations
      annotations: {}

      ## Service monitor scrape interval
      interval: 30s

      ## Prometheus relabel configs to apply to samples before scraping
      relabelings: []

      ## Prometheus metric relabel configs to apply to samples before ingesting
      metricRelabelings: []

  ## Resource requests and limits for the connector pod
  resources: {}
  #   requests:
  #     cpu: 250m
  #     memory: 256Mi
  #   limits:
  #     cpu: 500m
  #     memory: 512Mi

  ## Infra connector autoscaling configurations
  autoscaling:

    ## Enable connector autoscaling
    enabled: false

    ## Minimum number of connector pods to run
    minReplicas: 1

    ## Maximum number of connector pods to run
    maxReplicas: 3

    ## Target average CPU utilization percentage
    targetCPUUtilizationPercentage: 50

    ## Target average memory utilization percentage
    targetMemoryUtilizationPercentage: 50

  ## Infra connector node selector configurations
  nodeSelector: {}

  ## Infra connector tolerations configurations
  tolerations: []

  ## Infra connector affinity configurations
  affinity: {}

  ## Primary connector configuration
  ## Ref: https://github.com/infrahq/infra/blob/main/docs/cli.md#infra-connector
  config: {}
  ## Infra server access key
  #   accessKey: ""

  ## Infra server address
  #   server: ""

  ## Destination name
  #   name: ""

  ## Skip verify server TLS certificate
  #   skipTLSVerify: true
