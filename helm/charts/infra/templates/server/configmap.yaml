{{- if include "server.enabled" . | eq "true" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "server.fullname" . }}
  labels:
{{- include "server.labels" . | nindent 4 }}
data:
  infra.yaml: |
    version: 0.2
{{- $config := deepCopy .Values.server.config }}

    addr:
{{- range $key, $val := $config.addr }}
      {{ $key }}: ':{{ $val }}'
{{- end }}
{{- $config = unset $config "addr" }}

    secrets:
{{- .Values.server.additionalSecrets | default list | concat $config.secrets | uniq | toYaml | nindent 6 }}
{{- $config = unset $config "secrets" }}

    providers:
{{- .Values.server.additionalProviders | default list | concat $config.providers | uniq | toYaml | nindent 6 }}
{{- $config = unset $config "providers" }}

    grants:
{{- .Values.server.additionalGrants | default list | concat $config.grants | uniq | toYaml | nindent 6 }}
{{- $config = unset $config "grants" }}

    users:
{{- $users := .Values.server.additionalUsers | default list | concat $config.users }}
{{- if include "connector.enabled" . | eq "true" }}
{{- $accessKey := default "" .Values.connector.config.accessKey -}}
{{- if or (not $accessKey) (and (not (hasPrefix "file:" $accessKey)) (not (hasPrefix "env:" $accessKey))) }}
{{- $accessKey = "env:CONNECTOR_ACCESS_KEY" }}
{{- end }}
{{- $users = append $users (dict "name" "connector" "accessKey" $accessKey) }}
{{- end }}
{{- $users | uniq | toYaml | nindent 6 }}
{{- $config = unset $config "users" }}

    tls:
{{- $defaultTLSValues := dict "ca" "/var/run/secrets/infrahq.com/tls-ca/ca.crt" "caPrivateKey" "file:/var/run/secrets/infrahq.com/tls-ca/ca.key" }}
{{- $config.tls | default $defaultTLSValues | toYaml | nindent 6 }}
{{- $config = unset $config "tls" }}

    dbEncryptionKey: {{ $config.dbEncryptionKey | default "/var/run/secrets/infrahq.com/encryption-key/key" }}
{{- $config = unset $config "dbEncryptionKey" }}

    ui:
{{- $defaultUIProxyURL := "" }}
{{- if include "ui.enabled" . | eq "true" }}
{{- $defaultUIProxyURL = printf "http://%s.%s:3000" (include "ui.fullname" .) .Release.Namespace }}
{{- end }}
{{- $defaultUIValues := dict "proxyURL" $defaultUIProxyURL }}
{{- $config.ui | default $defaultUIValues | toYaml | nindent 6 }}
{{- $config = unset $config "ui" }}

{{- if include "postgres.enabled" . | eq "true" }}

    dbHost: {{ include "postgres.fullname" . }}.{{ .Release.Namespace }}
    dbPort: {{ .Values.postgres.service.port }}
    dbName: {{ .Values.postgres.dbName }}
    dbUsername: {{ .Values.postgres.dbUsername }}
{{- end }}

{{- range $key, $val := $config }}
{{- if kindIs "invalid" $val }}
{{- else if kindIs "map" $val }}
    {{ $key }}:
{{- $val | toYaml | nindent 6 }}
{{- else if kindIs "slice" $val }}
    {{ $key }}:
{{- $val | toYaml | nindent 6 }}
{{- else if kindIs "string" $val }}
    {{ $key }}: {{ tpl $val $ }}
{{- else }}
    {{ $key }}: {{ $val }}
{{- end }}
{{- end }}

{{- end }}
