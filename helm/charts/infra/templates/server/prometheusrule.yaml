{{- if include "server.enabled" . | eq "true" }}
{{- if and .Values.server.metrics.enabled .Values.server.metrics.prometheusRule.enabled }}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "server.fullname" . }}
  labels:
{{- include "server.labels" . | nindent 4 }}
{{- if .Values.server.metrics.prometheusRule.labels }}
{{- toYaml .Values.server.metrics.prometheusRule.labels | nindent 4 }}
{{- end }}
  annotations:
{{- toYaml .Values.server.metrics.prometheusRule.annotations | nindent 4 }}
spec:
{{- $commonLabels := printf "job=%q, namespace=%q" (include "server.name" .) .Release.Namespace }}
  groups:
    - name: server.rules
      rules:
{{- with .Values.server.metrics.prometheusRule.additionalRules }}
{{- toYaml . | nindent 8 }}
{{- end }}
        - alert: InfraServerDown
          annotations:
{{- with .Values.server.metrics.prometheusRule.additionalRuleAnnotations }}
{{- toYaml . | nindent 12 }}
{{- end }}
            description: '{{ `{{` }} $labels.job {{ `}}` }} has disappeared from Prometheus.'
            summary: Target disappeared from Prometheus.
          expr: absent(up{ {{ $commonLabels }} } == 1)
          for: 5m
          labels:
{{- with .Values.server.metrics.prometheusRule.additionalRuleLabels }}
{{- toYaml . | nindent 12 }}
{{- end }}
            severity: critical
    - name: database.rules
      rules:
        - alert: InfraDatabaseTooFewOpenConnections
          annotations:
{{- with .Values.server.metrics.prometheusRule.additionalRuleAnnotations }}
{{- toYaml . | nindent 12 }}
{{- end }}
            description: >
              Database {{ `{{` }} $labels.db_name {{ `}}` }} has {{ `{{` }} $value {{ `}}` }}
              open connections.
            summary: Number of open database connections too low.
          expr: sum by (db_name) (go_sql_open_connections{ {{ $commonLabels }} }) < 1
          for: 1m
          labels:
{{- with .Values.server.metrics.prometheusRule.additionalRuleLabels }}
{{- toYaml . | nindent 12 }}
{{- end }}
            severity: warning
    - name: api.rules
      rules:
        - alert: InfraAPITooMany4xx
          annotations:
{{- with .Values.server.metrics.prometheusRule.additionalRuleAnnotations }}
{{- toYaml . | nindent 12 }}
{{- end }}
            description: >
              {{ `{{` }} $value | humanizePercentage {{ `}}` }} of "{{ `{{` }} $labels.method {{ `}}` }} {{ `{{` }} $labels.path {{ `}}` }}"
              requests have returned HTTP status code {{ `{{` }} $labels.status {{ `}}` }} in the last 5 minutes.
            summary: Too many HTTP client error responses.
          expr: |
            sum by (method, path, status) (rate(http_request_duration_seconds_count{status=~"4..", {{ $commonLabels }} }[5m])) /
            sum by (method, path, status) (rate(http_request_duration_seconds_count{ {{ $commonLabels }} }[5m])) > 0.1
          for: 5m
          labels:
{{- with .Values.server.metrics.prometheusRule.additionalRuleLabels }}
{{- toYaml . | nindent 12 }}
{{- end }}
            severity: warning
        - alert: InfraAPITooMany5xx
          annotations:
{{- with .Values.server.metrics.prometheusRule.additionalRuleAnnotations }}
{{- toYaml . | nindent 12 }}
{{- end }}
            description: >
              {{ `{{` }} $value | humanizePercentage {{ `}}` }} of "{{ `{{` }} $labels.method {{ `}}` }} {{ `{{` }} $labels.path {{ `}}` }}"
              requests have returned HTTP status code {{ `{{` }} $labels.status {{ `}}` }} in the last 5 minutes.
            summary: Too many HTTP server error responses.
          expr: |
            sum by (method, path, status) (rate(http_request_duration_seconds_count{status=~"5..", {{ $commonLabels }} }[5m])) /
            sum by (method, path, status) (rate(http_request_duration_seconds_count{ {{ $commonLabels }} }[5m])) > 0.1
          for: 5m
          labels:
{{- with .Values.server.metrics.prometheusRule.additionalRuleLabels }}
{{- toYaml . | nindent 12 }}
{{- end }}
            severity: warning
        - alert: InfraAPIAvgLatencyTooHigh
          annotations:
{{- with .Values.server.metrics.prometheusRule.additionalRuleAnnotations }}
{{- toYaml . | nindent 12 }}
{{- end }}
            description: >
              "{{ `{{` }} $labels.method {{ `}}` }} {{ `{{` }} $labels.path {{ `}}` }}" requests over the last 5 minutes took an average of
              {{ `{{` }} $value | humanizeDuration {{ `}}` }}.
            summary: HTTP requests are taking too long.
          expr: |
            sum by (method, path) (rate(http_request_duration_seconds_sum{ {{ $commonLabels }} }[5m])) /
            sum by (method, path) (rate(http_request_duration_seconds_count{ {{ $commonLabels }} }[5m])) > 0.3
          for: 5m
          labels:
{{- with .Values.server.metrics.prometheusRule.additionalRuleLabels }}
{{- toYaml . | nindent 12 }}
{{- end }}
            severity: warning
{{- end }}
{{- end }}
