{{- if include "engine.enabled" . | eq "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "engine.fullname" . }}
  labels:
{{- include "engine.labels" . | nindent 4 }}
spec:
{{- if not .Values.engine.autoscaling.enabled }}
  replicas: {{ .Values.engine.replicaCount }}
{{- end }}
  selector:
    matchLabels:
{{- include "engine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
{{- include "engine.podLabels" . | nindent 8 }}
      annotations:
{{- include "engine.podAnnotations" . | nindent 8 }}
    spec:
      automountServiceAccountToken: {{ .Values.engine.serviceAccount.automountServiceAccountToken }}
      serviceAccountName: {{ include "engine.serviceAccountName" . }}
      imagePullSecrets:
{{- include "engine.imagePullSecrets" . | nindent 8 }}
      securityContext:
{{- toYaml .Values.engine.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
{{- toYaml .Values.engine.securityContext | nindent 12 }}
          image: "{{ include "engine.image.repository" . }}:{{ include "engine.image.tag" . }}"
          imagePullPolicy: {{ include "engine.image.pullPolicy" . }}
          args: ["engine", "-f", "/etc/infrahq/infra.yaml"]
          env:
{{- toYaml .Values.engine.env | nindent 12 }}
          envFrom:
{{- toYaml .Values.engine.envFrom | nindent 12 }}
          volumeMounts:
            - name: conf
              mountPath: /etc/infrahq
              readOnly: true
{{- if .Values.engine.persistence.enabled }}
            - name: data
              mountPath: /var/lib/infrahq/infra
{{- end }}
            - name: access-key
              mountPath: /var/run/secrets/infrahq.com/access-key
{{- if .Values.engine.volumeMounts }}
{{- toYaml .Values.engine.volumeMounts | nindent 12 }}
{{- end }}
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            successThreshold: {{ .Values.engine.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.engine.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.engine.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.engine.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.engine.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            successThreshold: {{ .Values.engine.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.engine.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.engine.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.engine.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.engine.readinessProbe.timeoutSeconds }}
          resources:
{{- toYaml .Values.engine.resources | nindent 12 }}
      volumes:
        - name: conf
          configMap:
            name: {{ include "engine.fullname" . }}
{{- if .Values.engine.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "engine.fullname" . }}
{{- end }}
        - name: access-key
          secret:
            secretName: {{ .Release.Name }}-access-key
            optional: true
{{- if .Values.engine.volumes }}
{{- toYaml .Values.engine.volumes | nindent 8 }}
{{- end }}
{{- with .Values.engine.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.engine.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.engine.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- end }}
