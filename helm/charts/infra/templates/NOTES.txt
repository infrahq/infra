################################################################################

                                Welcome to Infra

{{- if include "server.enabled" . | eq "true" }}

  To get started, login via the Infra CLI

{{- if .Values.server.ingress.enabled }}
{{- with first .Values.server.ingress.hosts }}

  $ infra login {{ . }}

{{- end }}
{{- else if eq .Values.server.service.type "NodePort" }}

  $ NODE_HOST=$(kubectl -n {{ .Release.Namespace }} get nodes -o jsonpath="{.status.addresses[0].address}")
  $ NODE_PORT=$(kubectl -n {{ .Release.Namespace }} get services/{{ include "server.fullname" . }} -o jsonpath="{.spec.ports[0].nodePort}")
  $ infra login $NODE_HOST:NODE_PORT

{{- else if eq .Values.server.service.type "LoadBalancer" }}

  NOTE: It may take a few minutes for the LoadBalancer to become available.
  You can watch the status of by running `kubectl -n {{ .Release.Namespace }} get services/{{ include "server.fullname" . }} -w`

  $ LOADBALANCER=$(kubectl -n {{ .Release.Namespace }} get services/{{ include "server.fullname" . }} -o jsonpath="{.status.loadBalancer.ingress[*]['ip', 'hostname']}")
  $ infra login $LOADBALANCER

{{- else if contains .Values.server.service.type "ClusterIP" }}

  $ kubectl -n {{ .Release.Namespace }} port-forward deployments/{{ include "server.fullname" . }} 8080:80 8443:443

  Infra API server is now accessible on localhost:8443

  $ infra login localhost:8443

{{- end }}

{{- if not .Values.server.persistence.enabled }}
{{- if and (not (hasKey .Values.server.config "dbHost")) (not .Values.server.config.dbHost) }}

################################# WARNING ######################################

  Server persistence is not enabled. Data will be lost on pod restart
  Enable persistence or connect an external datastore for data integrity.

{{- end }}
{{- end }}

{{- if .Values.server.config.adminAccessKey }}
{{- fail "`server.config.adminAccessKey` is no longer supported. Please migrate to `server.additionalUsers`" }}
{{- end }}

{{- range $key, $val := pick .Values.server "additionalSecrets" "additionalUsers" "additionalGrants" "additionalProviders" }}

################################# WARNING ######################################

  server.{{ $key }} is deprecated and will be removed in a
  future update. Please migrate to server.config.{{ $key | trimPrefix "additional" | lower }}.
{{- end }}

{{- else if include "connector.enabled" . | eq "true" }}

{{- if not .Values.connector.config.name }}

  NOTE: Missing `connector.config.name`. A name will be generated from available
  cluster metadata. If this behaviour is not desired, consider setting a
  name with `connector.config.name`.

{{- end }}

{{- if not .Values.connector.config.server }}

  NOTE: Missing `connector.config.server`. Assuming an in-cluster deployment.
  If this is not correct, set an Infra instance with `connector.config.server`.

{{- end }}

{{- if not .Values.connector.config.accessKey }}

  NOTE: Missing `connector.config.accessKey`. This instance will not be able to
  establish a connection to Infra. If you do not already have an access key,
  generate one using Infra CLI.

  $ infra keys add connector

  Set an access key with `connector.config.accessKey`.

{{- end }}

{{- if eq .Values.connector.service.type "LoadBalancer" }}

{{- else }}

  NOTE: This Kubernetes connector is configured with Kubernetes Service
  type {{ .Values.connector.service.type | quote }}. It may not be accessible by Infra or Infra CLI.

  Consider using Service type "LoadBalancer" if problems persist with
  `connector.service.type=LoadBalancer`.

{{- end }}

  Connector installed. It may take some time to initialize.

  Once this cluster has been successfully registered with Infra
  it will appear in the output of the following command:

  $ infra destinations list | grep {{ .Values.connector.config.name | default "my-cluster" }}

{{- end }}

################################################################################
