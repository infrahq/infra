/*
 * Infra API
 *
 * Infra REST API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type DestinationKubernetes struct {
	Ca string `json:"ca"`

	Endpoint string `json:"endpoint"`

	Namespace string `json:"namespace"`

	SaToken string `json:"saToken"`
}

// AssertDestinationKubernetesRequired checks if the required fields are not zero-ed
func AssertDestinationKubernetesRequired(obj DestinationKubernetes) error {
	elements := map[string]interface{}{
		"ca":        obj.Ca,
		"endpoint":  obj.Endpoint,
		"namespace": obj.Namespace,
		"saToken":   obj.SaToken,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseDestinationKubernetesRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DestinationKubernetes (e.g. [][]DestinationKubernetes), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDestinationKubernetesRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDestinationKubernetes, ok := obj.(DestinationKubernetes)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDestinationKubernetesRequired(aDestinationKubernetes)
	})
}
