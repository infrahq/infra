/*
 * Infra API
 *
 * Infra REST API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strings"
)

// UsersApiController binds http requests to an api service and writes the service results to the http response
type UsersApiController struct {
	service      UsersApiServicer
	errorHandler ErrorHandler
}

// UsersApiOption for how the controller is set up.
type UsersApiOption func(*UsersApiController)

// WithUsersApiErrorHandler inject ErrorHandler into controller
func WithUsersApiErrorHandler(h ErrorHandler) UsersApiOption {
	return func(c *UsersApiController) {
		c.errorHandler = h
	}
}

// NewUsersApiController creates a default api controller
func NewUsersApiController(s UsersApiServicer, opts ...UsersApiOption) Router {
	controller := &UsersApiController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all of the api route for the UsersApiController
func (c *UsersApiController) Routes() Routes {
	return Routes{
		{
			"ListUsers",
			strings.ToUpper("Get"),
			"/users",
			c.ListUsers,
		},
	}
}

// ListUsers - List users
func (c *UsersApiController) ListUsers(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.ListUsers(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
