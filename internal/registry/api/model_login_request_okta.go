/*
 * Infra API
 *
 * Infra REST API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type LoginRequestOkta struct {
	Domain string `json:"domain"`

	Code string `json:"code"`
}

// AssertLoginRequestOktaRequired checks if the required fields are not zero-ed
func AssertLoginRequestOktaRequired(obj LoginRequestOkta) error {
	elements := map[string]interface{}{
		"domain": obj.Domain,
		"code":   obj.Code,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseLoginRequestOktaRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LoginRequestOkta (e.g. [][]LoginRequestOkta), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseLoginRequestOktaRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLoginRequestOkta, ok := obj.(LoginRequestOkta)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertLoginRequestOktaRequired(aLoginRequestOkta)
	})
}
