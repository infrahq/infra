/*
 * Infra API
 *
 * Infra REST API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type SourceOkta struct {
	Domain string `json:"domain"`

	ClientId string `json:"clientId"`
}

// AssertSourceOktaRequired checks if the required fields are not zero-ed
func AssertSourceOktaRequired(obj SourceOkta) error {
	elements := map[string]interface{}{
		"domain":   obj.Domain,
		"clientId": obj.ClientId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSourceOktaRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SourceOkta (e.g. [][]SourceOkta), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSourceOktaRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSourceOkta, ok := obj.(SourceOkta)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSourceOktaRequired(aSourceOkta)
	})
}
