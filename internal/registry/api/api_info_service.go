/*
 * Infra API
 *
 * Infra REST API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"errors"
	"net/http"
)

// InfoApiService is a service that implents the logic for the InfoApiServicer
// This service should implement the business logic for every endpoint for the InfoApi API.
// Include any external packages or services that will be required by this service.
type InfoApiService struct {
}

// NewInfoApiService creates a default api service
func NewInfoApiService() InfoApiServicer {
	return &InfoApiService{}
}

// Status - Get signup status information
func (s *InfoApiService) Status(ctx context.Context) (ImplResponse, error) {
	// TODO - update Status with the required logic for this service method.
	// Add api_info_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, InlineResponse2001{}) or use other options such as http.Ok ...
	//return Response(200, InlineResponse2001{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Status method not implemented")
}

// Version - Get version information
func (s *InfoApiService) Version(ctx context.Context) (ImplResponse, error) {
	// TODO - update Version with the required logic for this service method.
	// Add api_info_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, InlineResponse200{}) or use other options such as http.Ok ...
	//return Response(200, InlineResponse200{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Version method not implemented")
}
