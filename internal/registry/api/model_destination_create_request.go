/*
 * Infra API
 *
 * Infra REST API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type DestinationCreateRequest struct {
	Name string `json:"name"`

	Kubernetes DestinationKubernetes `json:"kubernetes"`
}

// AssertDestinationCreateRequestRequired checks if the required fields are not zero-ed
func AssertDestinationCreateRequestRequired(obj DestinationCreateRequest) error {
	elements := map[string]interface{}{
		"name":       obj.Name,
		"kubernetes": obj.Kubernetes,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertDestinationKubernetesRequired(obj.Kubernetes); err != nil {
		return err
	}
	return nil
}

// AssertRecurseDestinationCreateRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DestinationCreateRequest (e.g. [][]DestinationCreateRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDestinationCreateRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDestinationCreateRequest, ok := obj.(DestinationCreateRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDestinationCreateRequestRequired(aDestinationCreateRequest)
	})
}
