/* tslint:disable */
/* eslint-disable */
/**
 * Infra API
 * Infra REST API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProviderKind,
    ProviderKindFromJSON,
    ProviderKindFromJSONTyped,
    ProviderKindToJSON,
    ProviderOkta,
    ProviderOktaFromJSON,
    ProviderOktaFromJSONTyped,
    ProviderOktaToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProviderRequest
 */
export interface ProviderRequest {
    /**
     * 
     * @type {ProviderKind}
     * @memberof ProviderRequest
     */
    kind: ProviderKind;
    /**
     * 
     * @type {string}
     * @memberof ProviderRequest
     */
    domain: string;
    /**
     * 
     * @type {string}
     * @memberof ProviderRequest
     */
    clientID: string;
    /**
     * 
     * @type {string}
     * @memberof ProviderRequest
     */
    clientSecret: string;
    /**
     * 
     * @type {ProviderOkta}
     * @memberof ProviderRequest
     */
    okta?: ProviderOkta;
}

export function ProviderRequestFromJSON(json: any): ProviderRequest {
    return ProviderRequestFromJSONTyped(json, false);
}

export function ProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProviderRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': ProviderKindFromJSON(json['kind']),
        'domain': json['domain'],
        'clientID': json['clientID'],
        'clientSecret': json['clientSecret'],
        'okta': !exists(json, 'okta') ? undefined : ProviderOktaFromJSON(json['okta']),
    };
}

export function ProviderRequestToJSON(value?: ProviderRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': ProviderKindToJSON(value.kind),
        'domain': value.domain,
        'clientID': value.clientID,
        'clientSecret': value.clientSecret,
        'okta': ProviderOktaToJSON(value.okta),
    };
}


