/* tslint:disable */
/* eslint-disable */
/**
 * Infra API
 * Infra REST API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GrantResource,
    GrantResourceFromJSON,
    GrantResourceFromJSONTyped,
    GrantResourceToJSON,
    Group,
    GroupFromJSON,
    GroupFromJSONTyped,
    GroupToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface Grant
 */
export interface Grant {
    /**
     * 
     * @type {string}
     * @memberof Grant
     */
    id: string;
    /**
     * created time in seconds since 1970-01-01
     * @type {number}
     * @memberof Grant
     */
    created: number;
    /**
     * updated time in seconds since 1970-01-01
     * @type {number}
     * @memberof Grant
     */
    updated: number;
    /**
     * 
     * @type {string}
     * @memberof Grant
     */
    role: string;
    /**
     * 
     * @type {string}
     * @memberof Grant
     */
    resourceName?: string;
    /**
     * 
     * @type {Array<User>}
     * @memberof Grant
     */
    users?: Array<User>;
    /**
     * 
     * @type {Array<Group>}
     * @memberof Grant
     */
    groups?: Array<Group>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Grant
     */
    labels?: Array<string>;
    /**
     * 
     * @type {GrantResource}
     * @memberof Grant
     */
    resource: GrantResource;
}

export function GrantFromJSON(json: any): Grant {
    return GrantFromJSONTyped(json, false);
}

export function GrantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Grant {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': json['created'],
        'updated': json['updated'],
        'role': json['role'],
        'resourceName': !exists(json, 'resourceName') ? undefined : json['resourceName'],
        'users': !exists(json, 'users') ? undefined : ((json['users'] as Array<any>).map(UserFromJSON)),
        'groups': !exists(json, 'groups') ? undefined : ((json['groups'] as Array<any>).map(GroupFromJSON)),
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'resource': GrantResourceFromJSON(json['resource']),
    };
}

export function GrantToJSON(value?: Grant | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': value.created,
        'updated': value.updated,
        'role': value.role,
        'resourceName': value.resourceName,
        'users': value.users === undefined ? undefined : ((value.users as Array<any>).map(UserToJSON)),
        'groups': value.groups === undefined ? undefined : ((value.groups as Array<any>).map(GroupToJSON)),
        'labels': value.labels,
        'resource': GrantResourceToJSON(value.resource),
    };
}


