/* tslint:disable */
/* eslint-disable */
/**
 * Infra API
 * Infra REST API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProviderOkta,
    ProviderOktaFromJSON,
    ProviderOktaFromJSONTyped,
    ProviderOktaToJSON,
} from './';

/**
 * 
 * @export
 * @interface Provider
 */
export interface Provider {
    /**
     * 
     * @type {string}
     * @memberof Provider
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof Provider
     */
    created: number;
    /**
     * 
     * @type {number}
     * @memberof Provider
     */
    updated: number;
    /**
     * 
     * @type {string}
     * @memberof Provider
     */
    domain: string;
    /**
     * 
     * @type {string}
     * @memberof Provider
     */
    clientID: string;
    /**
     * 
     * @type {string}
     * @memberof Provider
     */
    clientSecret: string;
    /**
     * 
     * @type {string}
     * @memberof Provider
     */
    kind: string;
    /**
     * 
     * @type {ProviderOkta}
     * @memberof Provider
     */
    okta?: ProviderOkta;
}

export function ProviderFromJSON(json: any): Provider {
    return ProviderFromJSONTyped(json, false);
}

export function ProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Provider {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': json['created'],
        'updated': json['updated'],
        'domain': json['domain'],
        'clientID': json['clientID'],
        'clientSecret': json['clientSecret'],
        'kind': json['kind'],
        'okta': !exists(json, 'okta') ? undefined : ProviderOktaFromJSON(json['okta']),
    };
}

export function ProviderToJSON(value?: Provider | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': value.created,
        'updated': value.updated,
        'domain': value.domain,
        'clientID': value.clientID,
        'clientSecret': value.clientSecret,
        'kind': value.kind,
        'okta': ProviderOktaToJSON(value.okta),
    };
}


