/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ProviderOkta struct for ProviderOkta
type ProviderOkta struct {
	APIToken string `json:"apiToken"`
}

// NewProviderOkta instantiates a new ProviderOkta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderOkta(apiToken string) *ProviderOkta {
	this := ProviderOkta{}
	this.APIToken = apiToken
	return &this
}

// NewProviderOktaWithDefaults instantiates a new ProviderOkta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderOktaWithDefaults() *ProviderOkta {
	this := ProviderOkta{}
	return &this
}

// GetAPIToken returns the APIToken field value
func (o *ProviderOkta) GetAPIToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.APIToken
}

// GetAPITokenOk returns a tuple with the APIToken field value
// and a boolean to check if the value has been set.
func (o *ProviderOkta) GetAPITokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.APIToken, true
}

// SetAPIToken sets field value
func (o *ProviderOkta) SetAPIToken(v string) {
	o.APIToken = v
}

func (o ProviderOkta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiToken"] = o.APIToken
	}
	return json.Marshal(toSerialize)
}

type NullableProviderOkta struct {
	value *ProviderOkta
	isSet bool
}

func (v NullableProviderOkta) Get() *ProviderOkta {
	return v.value
}

func (v *NullableProviderOkta) Set(val *ProviderOkta) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderOkta) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderOkta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderOkta(val *ProviderOkta) *NullableProviderOkta {
	return &NullableProviderOkta{value: val, isSet: true}
}

func (v NullableProviderOkta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderOkta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
