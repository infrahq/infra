/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GrantRequest struct for GrantRequest
type GrantRequest struct {
	Role     string        `json:"role"`
	Resource GrantResource `json:"resource"`
	Users    *[]string     `json:"users,omitempty"`
	Groups   *[]string     `json:"groups,omitempty"`
	Labels   *[]string     `json:"labels,omitempty"`
}

// NewGrantRequest instantiates a new GrantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrantRequest(role string, resource GrantResource) *GrantRequest {
	this := GrantRequest{}
	this.Role = role
	this.Resource = resource
	return &this
}

// NewGrantRequestWithDefaults instantiates a new GrantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrantRequestWithDefaults() *GrantRequest {
	this := GrantRequest{}
	return &this
}

// GetRole returns the Role field value
func (o *GrantRequest) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOK returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *GrantRequest) GetRoleOK() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *GrantRequest) SetRole(v string) {
	o.Role = v
}

// GetResource returns the Resource field value
func (o *GrantRequest) GetResource() GrantResource {
	if o == nil {
		var ret GrantResource
		return ret
	}

	return o.Resource
}

// GetResourceOK returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *GrantRequest) GetResourceOK() (*GrantResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *GrantRequest) SetResource(v GrantResource) {
	o.Resource = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *GrantRequest) GetUsers() []string {
	if o == nil || o.Users == nil {
		var ret []string
		return ret
	}
	return *o.Users
}

// GetUsersOK returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantRequest) GetUsersOK() (*[]string, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GrantRequest) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *GrantRequest) SetUsers(v []string) {
	o.Users = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *GrantRequest) GetGroups() []string {
	if o == nil || o.Groups == nil {
		var ret []string
		return ret
	}
	return *o.Groups
}

// GetGroupsOK returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantRequest) GetGroupsOK() (*[]string, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *GrantRequest) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *GrantRequest) SetGroups(v []string) {
	o.Groups = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GrantRequest) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return *o.Labels
}

// GetLabelsOK returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantRequest) GetLabelsOK() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GrantRequest) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *GrantRequest) SetLabels(v []string) {
	o.Labels = &v
}

func (o GrantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["resource"] = o.Resource
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	return json.Marshal(toSerialize)
}

type NullableGrantRequest struct {
	value *GrantRequest
	isSet bool
}

func (v NullableGrantRequest) Get() *GrantRequest {
	return v.value
}

func (v *NullableGrantRequest) Set(val *GrantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGrantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGrantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrantRequest(val *GrantRequest) *NullableGrantRequest {
	return &NullableGrantRequest{value: val, isSet: true}
}

func (v NullableGrantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
