/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SignupRequest struct for SignupRequest
type SignupRequest struct {
	Email    string `json:"email" validate:"email,required"`
	Password string `json:"password" validate:"required"`
}

// NewSignupRequest instantiates a new SignupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignupRequest(email string, password string) *SignupRequest {
	this := SignupRequest{}
	this.Email = email
	this.Password = password
	return &this
}

// NewSignupRequestWithDefaults instantiates a new SignupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignupRequestWithDefaults() *SignupRequest {
	this := SignupRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *SignupRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SignupRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SignupRequest) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *SignupRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *SignupRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *SignupRequest) SetPassword(v string) {
	o.Password = v
}

func (o SignupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableSignupRequest struct {
	value *SignupRequest
	isSet bool
}

func (v NullableSignupRequest) Get() *SignupRequest {
	return v.value
}

func (v *NullableSignupRequest) Set(val *SignupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSignupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSignupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignupRequest(val *SignupRequest) *NullableSignupRequest {
	return &NullableSignupRequest{value: val, isSet: true}
}

func (v NullableSignupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
