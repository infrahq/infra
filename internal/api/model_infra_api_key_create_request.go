/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// InfraAPIKeyCreateRequest struct for InfraAPIKeyCreateRequest
type InfraAPIKeyCreateRequest struct {
	Name        string               `json:"name"`
	Permissions []InfraAPIPermission `json:"permissions"`
}

// NewInfraAPIKeyCreateRequest instantiates a new InfraAPIKeyCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfraAPIKeyCreateRequest(name string, permissions []InfraAPIPermission) *InfraAPIKeyCreateRequest {
	this := InfraAPIKeyCreateRequest{}
	this.Name = name
	this.Permissions = permissions
	return &this
}

// NewInfraAPIKeyCreateRequestWithDefaults instantiates a new InfraAPIKeyCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfraAPIKeyCreateRequestWithDefaults() *InfraAPIKeyCreateRequest {
	this := InfraAPIKeyCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *InfraAPIKeyCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InfraAPIKeyCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InfraAPIKeyCreateRequest) SetName(v string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value
func (o *InfraAPIKeyCreateRequest) GetPermissions() []InfraAPIPermission {
	if o == nil {
		var ret []InfraAPIPermission
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *InfraAPIKeyCreateRequest) GetPermissionsOk() (*[]InfraAPIPermission, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *InfraAPIKeyCreateRequest) SetPermissions(v []InfraAPIPermission) {
	o.Permissions = v
}

func (o InfraAPIKeyCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableInfraAPIKeyCreateRequest struct {
	value *InfraAPIKeyCreateRequest
	isSet bool
}

func (v NullableInfraAPIKeyCreateRequest) Get() *InfraAPIKeyCreateRequest {
	return v.value
}

func (v *NullableInfraAPIKeyCreateRequest) Set(val *InfraAPIKeyCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInfraAPIKeyCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInfraAPIKeyCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfraAPIKeyCreateRequest(val *InfraAPIKeyCreateRequest) *NullableInfraAPIKeyCreateRequest {
	return &NullableInfraAPIKeyCreateRequest{value: val, isSet: true}
}

func (v NullableInfraAPIKeyCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfraAPIKeyCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
