/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// MachineKind the model 'MachineKind'
type MachineKind string

// List of MachineKind
const (
	API    MachineKind = "api"
	CLIENT MachineKind = "client"
)

var allowedMachineKindEnumValues = []MachineKind{
	"api",
	"client",
}

func (v *MachineKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MachineKind(value)
	for _, existing := range allowedMachineKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MachineKind", value)
}

// NewMachineKindFromValue returns a pointer to a valid MachineKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMachineKindFromValue(v string) (*MachineKind, error) {
	ev := MachineKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MachineKind: valid values are %v", v, allowedMachineKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MachineKind) IsValid() bool {
	for _, existing := range allowedMachineKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MachineKind value
func (v MachineKind) Ptr() *MachineKind {
	return &v
}

type NullableMachineKind struct {
	value *MachineKind
	isSet bool
}

func (v NullableMachineKind) Get() *MachineKind {
	return v.value
}

func (v *NullableMachineKind) Set(val *MachineKind) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineKind) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineKind(val *MachineKind) *NullableMachineKind {
	return &NullableMachineKind{value: val, isSet: true}
}

func (v NullableMachineKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
