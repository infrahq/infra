/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SourceOkta struct for SourceOkta
type SourceOkta struct {
	APIToken string `json:"apiToken"`
}

// NewSourceOkta instantiates a new SourceOkta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceOkta(apiToken string) *SourceOkta {
	this := SourceOkta{}
	this.APIToken = apiToken
	return &this
}

// NewSourceOktaWithDefaults instantiates a new SourceOkta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceOktaWithDefaults() *SourceOkta {
	this := SourceOkta{}
	return &this
}

// GetAPIToken returns the APIToken field value
func (o *SourceOkta) GetAPIToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.APIToken
}

// GetAPITokenOk returns a tuple with the APIToken field value
// and a boolean to check if the value has been set.
func (o *SourceOkta) GetAPITokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.APIToken, true
}

// SetAPIToken sets field value
func (o *SourceOkta) SetAPIToken(v string) {
	o.APIToken = v
}

func (o SourceOkta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiToken"] = o.APIToken
	}
	return json.Marshal(toSerialize)
}

type NullableSourceOkta struct {
	value *SourceOkta
	isSet bool
}

func (v NullableSourceOkta) Get() *SourceOkta {
	return v.value
}

func (v *NullableSourceOkta) Set(val *SourceOkta) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceOkta) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceOkta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceOkta(val *SourceOkta) *NullableSourceOkta {
	return &NullableSourceOkta{value: val, isSet: true}
}

func (v NullableSourceOkta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceOkta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
