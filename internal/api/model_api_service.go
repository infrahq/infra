/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ApiService struct for ApiService
type ApiService struct {
	ApiKey  string       `json:"apiKey"`
	Id      string       `json:"id"`
	Created int64        `json:"created"`
	Name    string       `json:"name"`
	Kind    *ServiceKind `json:"kind,omitempty"`
}

// NewApiService instantiates a new ApiService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiService(apiKey string, id string, created int64, name string) *ApiService {
	this := ApiService{}
	this.Id = id
	this.Created = created
	this.Name = name
	return &this
}

// NewApiServiceWithDefaults instantiates a new ApiService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiServiceWithDefaults() *ApiService {
	this := ApiService{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *ApiService) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *ApiService) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *ApiService) SetApiKey(v string) {
	o.ApiKey = v
}

// GetId returns the Id field value
func (o *ApiService) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiService) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiService) SetId(v string) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *ApiService) GetCreated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ApiService) GetCreatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ApiService) SetCreated(v int64) {
	o.Created = v
}

// GetName returns the Name field value
func (o *ApiService) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiService) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiService) SetName(v string) {
	o.Name = v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ApiService) GetKind() ServiceKind {
	if o == nil || o.Kind == nil {
		var ret ServiceKind
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiService) GetKindOk() (*ServiceKind, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ApiService) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given ServiceKind and assigns it to the Kind field.
func (o *ApiService) SetKind(v ServiceKind) {
	o.Kind = &v
}

func (o ApiService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiKey"] = o.ApiKey
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	return json.Marshal(toSerialize)
}

type NullableApiService struct {
	value *ApiService
	isSet bool
}

func (v NullableApiService) Get() *ApiService {
	return v.value
}

func (v *NullableApiService) Set(val *ApiService) {
	v.value = val
	v.isSet = true
}

func (v NullableApiService) IsSet() bool {
	return v.isSet
}

func (v *NullableApiService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiService(val *ApiService) *NullableApiService {
	return &NullableApiService{value: val, isSet: true}
}

func (v NullableApiService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
