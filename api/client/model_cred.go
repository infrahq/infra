/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Cred struct for Cred
type Cred struct {
	Token   string `json:"token"`
	Expires int64  `json:"expires"`
}

// NewCred instantiates a new Cred object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCred(token string, expires int64) *Cred {
	this := Cred{}
	this.Token = token
	this.Expires = expires
	return &this
}

// NewCredWithDefaults instantiates a new Cred object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredWithDefaults() *Cred {
	this := Cred{}
	return &this
}

// GetToken returns the Token field value
func (o *Cred) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *Cred) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *Cred) SetToken(v string) {
	o.Token = v
}

// GetExpires returns the Expires field value
func (o *Cred) GetExpires() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
func (o *Cred) GetExpiresOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expires, true
}

// SetExpires sets field value
func (o *Cred) SetExpires(v int64) {
	o.Expires = v
}

func (o Cred) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["expires"] = o.Expires
	}
	return json.Marshal(toSerialize)
}

type NullableCred struct {
	value *Cred
	isSet bool
}

func (v NullableCred) Get() *Cred {
	return v.value
}

func (v *NullableCred) Set(val *Cred) {
	v.value = val
	v.isSet = true
}

func (v NullableCred) IsSet() bool {
	return v.isSet
}

func (v *NullableCred) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCred(val *Cred) *NullableCred {
	return &NullableCred{value: val, isSet: true}
}

func (v NullableCred) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCred) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
