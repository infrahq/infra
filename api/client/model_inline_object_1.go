/*
Infra API

Infra REST API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject1 struct for InlineObject1
type InlineObject1 struct {
	Infra *LoginRequestInfra `json:"infra,omitempty"`
	Okta  *LoginRequestOkta  `json:"okta,omitempty"`
}

// NewInlineObject1 instantiates a new InlineObject1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1() *InlineObject1 {
	this := InlineObject1{}
	return &this
}

// NewInlineObject1WithDefaults instantiates a new InlineObject1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1WithDefaults() *InlineObject1 {
	this := InlineObject1{}
	return &this
}

// GetInfra returns the Infra field value if set, zero value otherwise.
func (o *InlineObject1) GetInfra() LoginRequestInfra {
	if o == nil || o.Infra == nil {
		var ret LoginRequestInfra
		return ret
	}
	return *o.Infra
}

// GetInfraOk returns a tuple with the Infra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1) GetInfraOk() (*LoginRequestInfra, bool) {
	if o == nil || o.Infra == nil {
		return nil, false
	}
	return o.Infra, true
}

// HasInfra returns a boolean if a field has been set.
func (o *InlineObject1) HasInfra() bool {
	if o != nil && o.Infra != nil {
		return true
	}

	return false
}

// SetInfra gets a reference to the given LoginRequestInfra and assigns it to the Infra field.
func (o *InlineObject1) SetInfra(v LoginRequestInfra) {
	o.Infra = &v
}

// GetOkta returns the Okta field value if set, zero value otherwise.
func (o *InlineObject1) GetOkta() LoginRequestOkta {
	if o == nil || o.Okta == nil {
		var ret LoginRequestOkta
		return ret
	}
	return *o.Okta
}

// GetOktaOk returns a tuple with the Okta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1) GetOktaOk() (*LoginRequestOkta, bool) {
	if o == nil || o.Okta == nil {
		return nil, false
	}
	return o.Okta, true
}

// HasOkta returns a boolean if a field has been set.
func (o *InlineObject1) HasOkta() bool {
	if o != nil && o.Okta != nil {
		return true
	}

	return false
}

// SetOkta gets a reference to the given LoginRequestOkta and assigns it to the Okta field.
func (o *InlineObject1) SetOkta(v LoginRequestOkta) {
	o.Okta = &v
}

func (o InlineObject1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Infra != nil {
		toSerialize["infra"] = o.Infra
	}
	if o.Okta != nil {
		toSerialize["okta"] = o.Okta
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1 struct {
	value *InlineObject1
	isSet bool
}

func (v NullableInlineObject1) Get() *InlineObject1 {
	return v.value
}

func (v *NullableInlineObject1) Set(val *InlineObject1) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1(val *InlineObject1) *NullableInlineObject1 {
	return &NullableInlineObject1{value: val, isSet: true}
}

func (v NullableInlineObject1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
