{
  "openapi": "3.0.0",
  "components": {
    "schemas": {
      "CreateAccessKeyResponse": {
        "properties": {
          "accessKey": {
            "type": "string"
          },
          "created": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "expires": {
            "description": "after this deadline the key is no longer valid",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "extensionDeadline": {
            "description": "the key must be used by this time to remain valid",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "issuedFor": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "providerID": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          }
        }
      },
      "CreateIdentityResponse": {
        "properties": {
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTimePassword": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateTokenResponse": {
        "properties": {
          "expires": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Destination": {
        "properties": {
          "connection": {
            "properties": {
              "ca": {
                "example": "-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gAwIBAgIRALRetnpcTo9O3V2fAK3ix+c\n-----END CERTIFICATE-----\n",
                "type": "string"
              },
              "url": {
                "example": "aa60eexample.us-west-2.elb.amazonaws.com",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object"
          },
          "created": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uniqueID": {
            "example": "94c2c570a20311180ec325fd56",
            "type": "string"
          },
          "updated": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "EmptyResponse": {},
      "Error": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "fieldErrors": {
            "items": {
              "properties": {
                "errors": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "fieldName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Grant": {
        "properties": {
          "created": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "description": "id of the identity that created the grant",
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "group": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "identity": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "privilege": {
            "description": "a role or permission",
            "type": "string"
          },
          "resource": {
            "description": "a resource name in Infra's Universal Resource Notation",
            "type": "string"
          },
          "updated": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "Group": {
        "properties": {
          "created": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updated": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "Identity": {
        "properties": {
          "created": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "lastSeenAt": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updated": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ListResponse[AccessKey]": {
        "properties": {
          "count": {
            "format": "int",
            "type": "integer"
          },
          "items": {
            "items": {
              "properties": {
                "created": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "expires": {
                  "description": "key is no longer valid after this time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "extensionDeadline": {
                  "description": "key must be renewed after this time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "issuedFor": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "issuedForName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "providerID": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        }
      },
      "ListResponse[Destination]": {
        "properties": {
          "count": {
            "format": "int",
            "type": "integer"
          },
          "items": {
            "items": {
              "properties": {
                "connection": {
                  "properties": {
                    "ca": {
                      "example": "-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gAwIBAgIRALRetnpcTo9O3V2fAK3ix+c\n-----END CERTIFICATE-----\n",
                      "type": "string"
                    },
                    "url": {
                      "example": "aa60eexample.us-west-2.elb.amazonaws.com",
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ],
                  "type": "object"
                },
                "created": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "uniqueID": {
                  "example": "94c2c570a20311180ec325fd56",
                  "type": "string"
                },
                "updated": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        }
      },
      "ListResponse[Grant]": {
        "properties": {
          "count": {
            "format": "int",
            "type": "integer"
          },
          "items": {
            "items": {
              "properties": {
                "created": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "description": "id of the identity that created the grant",
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "group": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "id": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "identity": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "privilege": {
                  "description": "a role or permission",
                  "type": "string"
                },
                "resource": {
                  "description": "a resource name in Infra's Universal Resource Notation",
                  "type": "string"
                },
                "updated": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        }
      },
      "ListResponse[Group]": {
        "properties": {
          "count": {
            "format": "int",
            "type": "integer"
          },
          "items": {
            "items": {
              "properties": {
                "created": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "updated": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        }
      },
      "ListResponse[Identity]": {
        "properties": {
          "count": {
            "format": "int",
            "type": "integer"
          },
          "items": {
            "items": {
              "properties": {
                "created": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "lastSeenAt": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "updated": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          }
        }
      },
      "ListResponse[Provider]": {
        "properties": {
          "count": {
            "format": "int",
            "type": "integer"
          },
          "items": {
            "items": {
              "properties": {
                "clientID": {
                  "example": "0oapn0qwiQPiMIyR35d6",
                  "type": "string"
                },
                "created": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "example": "4yJ3n3D8E2",
                  "format": "uid",
                  "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                  "type": "string"
                },
                "name": {
                  "example": "okta",
                  "type": "string"
                },
                "updated": {
                  "description": "formatted as an RFC3339 date-time",
                  "example": "2022-03-14T09:48:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "example": "infrahq.okta.com",
                  "type": "string"
                }
              },
              "required": [
                "url",
                "clientID"
              ],
              "type": "object"
            },
            "type": "array"
          }
        }
      },
      "LoginResponse": {
        "properties": {
          "accessKey": {
            "type": "string"
          },
          "expires": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "passwordUpdateRequired": {
            "type": "boolean"
          }
        }
      },
      "Provider": {
        "properties": {
          "clientID": {
            "example": "0oapn0qwiQPiMIyR35d6",
            "type": "string"
          },
          "created": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": "4yJ3n3D8E2",
            "format": "uid",
            "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
            "type": "string"
          },
          "name": {
            "example": "okta",
            "type": "string"
          },
          "updated": {
            "description": "formatted as an RFC3339 date-time",
            "example": "2022-03-14T09:48:00Z",
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "example": "infrahq.okta.com",
            "type": "string"
          }
        },
        "required": [
          "url",
          "clientID"
        ]
      },
      "SignupEnabledResponse": {
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "Version": {
        "properties": {
          "version": {
            "type": "string"
          }
        }
      }
    }
  },
  "info": {
    "description": "Infra API",
    "license": {
      "name": "Elastic License v2.0",
      "url": "https://www.elastic.co/licensing/elastic-license"
    },
    "title": "Infra API",
    "version": "0.12.2"
  },
  "paths": {
    "/v1/access-keys": {
      "get": {
        "description": "ListAccessKeys",
        "operationId": "ListAccessKeys",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "query",
            "name": "identity_id",
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[AccessKey]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListAccessKeys",
        "tags": [
          "Authentication"
        ]
      },
      "post": {
        "description": "CreateAccessKey",
        "operationId": "CreateAccessKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "extensionDeadline": {
                    "description": "How long the key is active for before it needs to be renewed. The access key must be used within this amount of time to renew validity",
                    "example": "72h3m6.5s",
                    "format": "duration",
                    "type": "string"
                  },
                  "identityID": {
                    "example": "4yJ3n3D8E2",
                    "format": "uid",
                    "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "ttl": {
                    "description": "maximum time valid",
                    "example": "72h3m6.5s",
                    "format": "duration",
                    "type": "string"
                  }
                },
                "required": [
                  "identityID",
                  "ttl",
                  "extensionDeadline"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccessKeyResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "CreateAccessKey",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/access-keys/{id}": {
      "delete": {
        "description": "DeleteAccessKey",
        "operationId": "DeleteAccessKey",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "DeleteAccessKey",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/destinations": {
      "get": {
        "description": "ListDestinations",
        "operationId": "ListDestinations",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "unique_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Destination]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListDestinations",
        "tags": [
          "Destinations"
        ]
      },
      "post": {
        "description": "CreateDestination",
        "operationId": "CreateDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "connection": {
                    "properties": {
                      "ca": {
                        "example": "-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gAwIBAgIRALRetnpcTo9O3V2fAK3ix+c\n-----END CERTIFICATE-----\n",
                        "type": "string"
                      },
                      "url": {
                        "example": "aa60eexample.us-west-2.elb.amazonaws.com",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "uniqueID": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Destination"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "CreateDestination",
        "tags": [
          "Destinations"
        ]
      }
    },
    "/v1/destinations/{id}": {
      "delete": {
        "description": "DeleteDestination",
        "operationId": "DeleteDestination",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "DeleteDestination",
        "tags": [
          "Destinations"
        ]
      },
      "get": {
        "description": "GetDestination",
        "operationId": "GetDestination",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Destination"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "GetDestination",
        "tags": [
          "Destinations"
        ]
      },
      "put": {
        "description": "UpdateDestination",
        "operationId": "UpdateDestination",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "connection": {
                    "properties": {
                      "ca": {
                        "example": "-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gAwIBAgIRALRetnpcTo9O3V2fAK3ix+c\n-----END CERTIFICATE-----\n",
                        "type": "string"
                      },
                      "url": {
                        "example": "aa60eexample.us-west-2.elb.amazonaws.com",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "uniqueID": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Destination"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "UpdateDestination",
        "tags": [
          "Destinations"
        ]
      }
    },
    "/v1/grants": {
      "get": {
        "description": "ListGrants",
        "operationId": "ListGrants",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "query",
            "name": "identity",
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          },
          {
            "example": "4yJ3n3D8E2",
            "in": "query",
            "name": "group",
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          },
          {
            "example": "production",
            "in": "query",
            "name": "resource",
            "schema": {
              "example": "production",
              "type": "string"
            }
          },
          {
            "example": "view",
            "in": "query",
            "name": "privilege",
            "schema": {
              "example": "view",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Grant]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListGrants",
        "tags": [
          "Grants"
        ]
      },
      "post": {
        "description": "CreateGrant",
        "operationId": "CreateGrant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "group": {
                    "example": "4yJ3n3D8E2",
                    "format": "uid",
                    "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                    "type": "string"
                  },
                  "identity": {
                    "example": "4yJ3n3D8E2",
                    "format": "uid",
                    "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                    "type": "string"
                  },
                  "privilege": {
                    "description": "a role or permission",
                    "example": "view",
                    "type": "string"
                  },
                  "resource": {
                    "description": "a resource name in Infra's Universal Resource Notation",
                    "example": "production",
                    "type": "string"
                  }
                },
                "required": [
                  "privilege",
                  "resource"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grant"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "CreateGrant",
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1/grants/{id}": {
      "delete": {
        "description": "DeleteGrant",
        "operationId": "DeleteGrant",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "DeleteGrant",
        "tags": [
          "Grants"
        ]
      },
      "get": {
        "description": "GetGrant",
        "operationId": "GetGrant",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grant"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "GetGrant",
        "tags": [
          "Grants"
        ]
      }
    },
    "/v1/groups": {
      "get": {
        "description": "ListGroups",
        "operationId": "ListGroups",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Group]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListGroups",
        "tags": [
          "Groups"
        ]
      },
      "post": {
        "description": "CreateGroup",
        "operationId": "CreateGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "CreateGroup",
        "tags": [
          "Groups"
        ]
      }
    },
    "/v1/groups/{id}": {
      "get": {
        "description": "GetGroup",
        "operationId": "GetGroup",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "GetGroup",
        "tags": [
          "Groups"
        ]
      }
    },
    "/v1/groups/{id}/grants": {
      "get": {
        "description": "ListGroupGrants",
        "operationId": "ListGroupGrants",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Grant]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListGroupGrants",
        "tags": [
          "Grants",
          "Groups"
        ]
      }
    },
    "/v1/identities": {
      "get": {
        "description": "ListIdentities",
        "operationId": "ListIdentities",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "items": {
                "example": "4yJ3n3D8E2",
                "format": "uid",
                "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Identity]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListIdentities",
        "tags": [
          "Identities"
        ]
      },
      "post": {
        "description": "CreateIdentity",
        "operationId": "CreateIdentity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "setOneTimePassword": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIdentityResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "CreateIdentity",
        "tags": [
          "Identities"
        ]
      }
    },
    "/v1/identities/{id}": {
      "delete": {
        "description": "DeleteIdentity",
        "operationId": "DeleteIdentity",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "DeleteIdentity",
        "tags": [
          "Identities"
        ]
      },
      "get": {
        "description": "GetIdentity",
        "operationId": "GetIdentity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "a uid or the literal self",
              "example": "4yJ3n3D8E2",
              "format": "uid|self",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}|self",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "GetIdentity",
        "tags": [
          "Identities"
        ]
      },
      "put": {
        "description": "UpdateIdentity",
        "operationId": "UpdateIdentity",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "password": {
                    "minLength": 8,
                    "type": "string"
                  }
                },
                "required": [
                  "password"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "UpdateIdentity",
        "tags": [
          "Identities"
        ]
      }
    },
    "/v1/identities/{id}/grants": {
      "get": {
        "description": "ListIdentityGrants",
        "operationId": "ListIdentityGrants",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Grant]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListIdentityGrants",
        "tags": [
          "Grants",
          "Identities"
        ]
      }
    },
    "/v1/identities/{id}/groups": {
      "get": {
        "description": "ListIdentityGroups",
        "operationId": "ListIdentityGroups",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Group]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListIdentityGroups",
        "tags": [
          "Groups",
          "Identities"
        ]
      }
    },
    "/v1/login": {
      "post": {
        "description": "Login",
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "accessKey": {
                    "type": "string"
                  },
                  "oidc": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "providerID": {
                        "example": "4yJ3n3D8E2",
                        "format": "uid",
                        "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
                        "type": "string"
                      },
                      "redirectURL": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "providerID",
                      "redirectURL",
                      "code"
                    ],
                    "type": "object"
                  },
                  "passwordCredentials": {
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "password"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/logout": {
      "post": {
        "description": "Logout",
        "operationId": "Logout",
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Logout",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/providers": {
      "get": {
        "description": "ListProviders",
        "operationId": "ListProviders",
        "parameters": [
          {
            "example": "okta",
            "in": "query",
            "name": "name",
            "schema": {
              "example": "okta",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse[Provider]"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "ListProviders",
        "tags": [
          "Providers"
        ]
      },
      "post": {
        "description": "CreateProvider",
        "operationId": "CreateProvider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clientID": {
                    "example": "0oapn0qwiQPiMIyR35d6",
                    "type": "string"
                  },
                  "clientSecret": {
                    "example": "jmda5eG93ax3jMDxTGrbHd_TBGT6kgNZtrCugLbU",
                    "type": "string"
                  },
                  "name": {
                    "example": "okta",
                    "type": "string"
                  },
                  "url": {
                    "example": "infrahq.okta.com",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "url",
                  "clientID",
                  "clientSecret"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "CreateProvider",
        "tags": [
          "Providers"
        ]
      }
    },
    "/v1/providers/{id}": {
      "delete": {
        "description": "DeleteProvider",
        "operationId": "DeleteProvider",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "DeleteProvider",
        "tags": [
          "Providers"
        ]
      },
      "get": {
        "description": "GetProvider",
        "operationId": "GetProvider",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "GetProvider",
        "tags": [
          "Providers"
        ]
      },
      "put": {
        "description": "UpdateProvider",
        "operationId": "UpdateProvider",
        "parameters": [
          {
            "example": "4yJ3n3D8E2",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "4yJ3n3D8E2",
              "format": "uid",
              "pattern": "[\\da-zA-HJ-NP-Z]{1,11}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clientID": {
                    "example": "0oapn0qwiQPiMIyR35d6",
                    "type": "string"
                  },
                  "clientSecret": {
                    "example": "jmda5eG93ax3jMDxTGrbHd_TBGT6kgNZtrCugLbU",
                    "type": "string"
                  },
                  "name": {
                    "example": "okta",
                    "type": "string"
                  },
                  "url": {
                    "example": "infrahq.okta.com",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "url",
                  "clientID",
                  "clientSecret"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "UpdateProvider",
        "tags": [
          "Providers"
        ]
      }
    },
    "/v1/signup": {
      "get": {
        "description": "SignupEnabled",
        "operationId": "SignupEnabled",
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupEnabledResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "SignupEnabled",
        "tags": [
          "Misc"
        ]
      },
      "post": {
        "description": "Signup",
        "operationId": "Signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "password"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Signup",
        "tags": [
          "Misc"
        ]
      }
    },
    "/v1/tokens": {
      "post": {
        "description": "CreateToken",
        "operationId": "CreateToken",
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTokenResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "CreateToken",
        "tags": [
          "Destinations"
        ]
      }
    },
    "/v1/version": {
      "get": {
        "description": "Version",
        "operationId": "Version",
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized: Requestor is not authenticated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden: Requestor does not have the right permissions"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Duplicate Record"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Version",
        "tags": [
          "Misc"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.infrahq.com"
    }
  ]
}
