name: pull request

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - run: go install gotest.tools/gotestsum@v1.7.0
      - run: go mod tidy
      - run: ~/go/bin/gotestsum --no-color=false -ftestname -- -short -race ./...

  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - uses: golangci/golangci-lint-action@v3.1.0

  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Azure/setup-helm@v1
      - run: make helm/lint tag=0.0.0-development

  commit-lint:
    if: startsWith(github.head_ref, 'dependabot/') != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
      - id: cache-commitlint
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-commitlint
      - run: npm install @commitlint/{config-conventional,cli}
        if: steps.cache-commitlint.cache-hit != true
      - run: ./node_modules/.bin/commitlint --from origin/$GITHUB_BASE_REF --to @ --verbose --config .github/commitlint.config.js

  check-generated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Check generated docs are updated
        run: |
          go run ./internal/docgen
          go run ./internal/openapigen docs/api/openapi3.json
          git diff --exit-code
      - name: Check go mod is tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

  docker:
    if: startsWith(github.head_ref, 'release-please-') == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: make docker tag=next
        env:
          TELEMETRY_WRITE_KEY: ${{ secrets.TELEMETRY_WRITE_KEY }}
          CRASH_REPORTING_DSN: ${{ secrets.CRASH_REPORTING_DSN }}
