name: ci / core

on:
  pull_request:
    paths:
      - go.mod
      - go.sum
      - '**/*.go'
      - '.github/workflows/ci-core.yaml'
      - '.golangci.yml'

  push:
    branches:
      - main
    paths:
      - go.mod
      - go.sum
      - '**/*.go'
      - '.github/workflows/*-core.yaml'
      - '.golangci.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true
      # install from source, because we need to build our plugin with the exact
      # same version of Go.
      - name: install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.49.0
      - name: run lint
        # disable auto-fix, and enable verbose
        run: LINT_ARGS=-v  make lint

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: password123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true
      - run: go mod download -x
      - run: go install gotest.tools/gotestsum@v1.8.0

      - name: go test
        run: ~/go/bin/gotestsum -ftestname -- -race ./...
        env:
          POSTGRESQL_CONNECTION: "host=localhost port=5432 user=postgres dbname=postgres password=password123"

      - name: go test querylinter
        working-directory: ./internal/tools/querylinter
        run: ~/go/bin/gotestsum -ftestname ./...

      - name: Check that tests leave a clean git checkout
        run: |
          # show and check changes to committed files
          git diff --exit-code
          # show and check for uncommitted files
          git status --short; [[ "$(git status --short)" == "" ]]

  check-generated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true
      - run: go mod download -x
      - run: go build -debug-actiongraph=compile.json .
      - uses: actions/upload-artifact@v3
        with:
          name: build-log
          path: compile.json

      - name: Check generated docs are updated
        run: |
          # fake a terminal to get the right defaults for non-interactive
          script -e -q -c "go run ${LDFLAGS:+-ldflags \"$LDFLAGS\"} ./internal/docgen"
          git diff --exit-code
      - name: Check go mod is tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum
      - name: Check generated code is updated
        run: |
          go generate ./...
          git diff --exit-code
