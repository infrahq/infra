name: publish

on:
  workflow_call:
    inputs:
      RELEASE_NAME:
        type: string
        required: true
      ENVIRONMENT:
        type: string
        required: true
    secrets:
      AWS_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      RELEASES_BUCKET:
        required: true
      HELM_BUCKET:
        required: true
      GEMFURY_TOKEN:
        required: true
      GORELEASER_GITHUB_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true
      TELEMETRY_WRITE_KEY:
        required: true

jobs:
  publish-artifacts:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - uses: actions/download-artifact@v3
        with:
          name: binaries
      - run: |
          gh release upload --clobber v${{ inputs.RELEASE_NAME }} *.txt *.zip *.deb *.rpm
        if: ${{ github.ref_type == 'tag' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          for PACKAGE in *.deb *.rpm; do
            curl -fsSL -F package=@$PACKAGE https://${{ secrets.GEMFURY_TOKEN }}@push.fury.io/infrahq/
          done
        if: ${{ inputs.ENVIRONMENT == 'production' }}
        continue-on-error: true
      - run: aws s3 sync . s3://${{ secrets.RELEASES_BUCKET }}/infra/v${{ inputs.RELEASE_NAME }} --exclude '*' --include '*.zip' --include '*.deb' --include '*.rpm' --include 'infra-checksums.txt' --acl public-read
      - uses: actions/download-artifact@v3
        with:
          name: helm
      - run: |
          # download the previous index.yaml so we can amend it
          aws s3 sync s3://${{ secrets.HELM_BUCKET }} . --exclude '*' --include 'index.yaml'
          helm repo index --merge index.yaml .
          aws s3 sync . s3://${{ secrets.HELM_BUCKET }} --exclude '*' --include 'index.yaml' --include '*.tgz' --acl public-read
      - run: |
          git config --global user.name infrahq-ci
          git config --global user.email contact@infrahq.com
      - uses: actions/checkout@v3
        with:
          repository: infrahq/homebrew-tap
          path: homebrew-tap
          token: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
        if: ${{ inputs.ENVIRONMENT == 'production' }}
      - run: |
          sh update-tap.sh -b https://${{ secrets.RELEASES_BUCKET }}/infra ${{ inputs.RELEASE_NAME }}
          RECIPE=$(git status --porcelain | awk '{ print $2 }')
          git add $RECIPE
          git commit -m "Brew formula update for ${RECIPE%.*} version ${{ inputs.RELEASE_NAME }}"
          git push origin @:refs/heads/main
        working-directory: homebrew-tap
        if: ${{ inputs.ENVIRONMENT == 'production' }}
        continue-on-error: true
      - uses: actions/checkout@v3
        with:
          repository: infrahq/scoop
          path: scoop
          token: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
        if: ${{ inputs.ENVIRONMENT == 'production' }}
      - run: |
          sh update-scoop.sh -b https://${{ secrets.RELEASES_BUCKET }}/infra ${{ inputs.RELEASE_NAME }}
          PACKAGE=$(git status --porcelain | awk '{ print $2 }')
          git add $PACKAGE
          git commit -m "Scoop update for ${PACKAGE%.*} version ${{ inputs.RELEASE_NAME }}"
          git push origin @:refs/heads/main
        working-directory: scoop
        if: ${{ inputs.ENVIRONMENT == 'production' }}
        continue-on-error: true

  publish-docker:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - id: metadata
        uses: docker/metadata-action@v4
        with:
          images: infrahq/infra
          flavor: latest=false
          tags: |
            type=raw,value=${{ inputs.RELEASE_NAME }}
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}
            type=match,pattern=.*-(.*),group=1,value=${{ inputs.RELEASE_NAME }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDVERSION=${{ inputs.RELEASE_NAME }}
            TELEMETRY_WRITE_KEY=${{ secrets.TELEMETRY_WRITE_KEY }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=infrahq/infra:latest
          cache-to: type=inline
